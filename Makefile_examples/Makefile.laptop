# ##########
work=/home/marcuspe/software/
srcdir=..


limedir=$(work)/lime/build-ubuntu20

fftwdir=$(work)/fftw/build-ubuntu20

lhpcdir=$(work)/aff/build-ubuntu20/

hdf5_include_dir=/usr/include/hdf5/serial/

CPPFLAGS = -DF_ -DHAVE_OPENMP -DCUBIC_GROUP_DOUBLE_COVER -DHAVE_HDF5 -DDUMMY_SOLVER -DHAVE_LHPC_AFF 

CXX=g++ -fopenmp
CXXFLAGS= -Wall -pedantic -g -O3 ${CPPFLAGS}

CCDEP = g++
DEPFLAGS = -MM ${CPPFLAGS}

INCLUDE = -I$(limedir)/include/ -I$(srcdir) -I$(fftwdir)/include -I. -I$(lhpcdir)/include -I$(mpichdir)/include -I$(hdf5_include_dir)/

LIBS = -L$(lhpcdir)/lib -L$(limedir)/lib/ -L$(fftwdir)/lib -lfftw -llime -llapack -lblas -lgfortran -llhpc-aff -lhdf5_serial -lm

LDFLAGS = -fopenmp -L$(limedir)/lib/ -L$(fftwdir)/lib -lfftw -L/usr/lib/ -llime -llapack -lblas -lgfortran -llhpc-aff -lhdf5_serial -lm
 
LINK = $(CXX) -o $@ ${LDFLAGS}
COMPILE = ${CXX} $(INCLUDE) -o $@ ${CXXFLAGS}

MODULES = DML_crc32 dml getopt cvc_utils cvc_geometry mpi_init io io_utils propagator_io read_input_parser_cvc \
	  get_index gauge_io contractions_io ranlxd ranlxs Q_phi set_default \
	  Q_clover_phi gsp prepare_source matrix_init project make_x_orbits contract_cvc_tensor smearing_techniques \
	  prepare_propagator scalar_products clover rotations gitversion gamma group_projection \
	  vdag_w_utils contract_cvc_tensor_eo_lm_factors gsp_utils gsp_recombine dummy_solver contract_loop \
	  incomp_gamma derived_quantities uwerr gluon_operators


HEADERS = getopt cvc_complex cvc_geometry cvc_linalg iblas icontract cvc_utils default_input_values dml global io io_utils \
	  mpi_init propagator_io read_input_parser get_index gauge_io contractions_io \
	  ranlxd ranlxs Q_phi set_default laplace_linalg Q_clover_phi \
	  gsp prepare_source matrix_init project make_x_orbits contract_cvc_tensor smearing_techniques \
	  prepare_propagator scalar_products clover rotations gamma gamma_mult_table table_init_d table_init_z \
	  vdag_w_utils contract_cvc_tensor_eo_lm_factors \
          set_cubic_group_double_cover_elements set_cubic_group_double_cover_identification_table set_cubic_group_elements \
          set_cubic_group_elements_v2 gamma gamma_mult_table clebsch_gordan group_projection \
	  table_init_z table_init_d table_init_i table_init_c table_init_asym_z group_projection_applicator \
	  gsp_utils gsp_recombine dummy_solver contract_loop incomp_gamma derived_quantities uwerr gluon_operators



PROGRAM = cpff_invert_contract loop_invert_contract cpff_fht_analyse soet_invert_contract cpff_avx_fht_invert_contract \
	  p2gg_analyse p2gg_invert_contract p2gg_invert_contract_exdefl p2gg_exdefl_uwerr_analyse p2gg_analyse_wdisc \
	  hvp_analyse loop_extract xg_exdefl_analyse cpff_xg_contract \
	  compact


all: dep $(PROGRAM) 


# ##########

read_input_parser_cvc.cpp: ${srcdir}/read_input_parser_cvc.l
	${LEX} -P cvc_ -i -t $< > ${srcdir}/read_input_parser_cvc.cpp

$(addsuffix .d,$(MODULES)): %.d: ${srcdir}/%.cpp
	 @ $(CCDEP) ${DEPFLAGS} ${INCLUDE} $< > $@

$(addsuffix .d,$(PROGRAM)): %.d: ${srcdir}/%.cpp
	 @ $(CCDEP) ${DEPFLAGS} ${INCLUDE} $< > $@

dep: $(addsuffix .d,$(MODULES) ${PROGRAM})

$(addsuffix .o,${MODULES}): %.o: ${srcdir}/%.cpp $(addprefix ${srcdir}/, $(addsuffix .h, ${HEADERS})) %.d
	${COMPILE} ${OPTARGS} -c $< 

$(addsuffix .o,${PROGRAM}): %.o: ${srcdir}/%.cpp %.d
	${COMPILE} ${OPTARGS} -c $< 

${PROGRAM}: %: %.o read_input_parser_cvc.cpp gitversion.cpp $(addsuffix .o,${MODULES})
	${LINK}  $(addsuffix .o,${MODULES}) $@.o $(LIBS)

gitversion.cpp: ${srcdir}/.git/HEAD ${srcdir}/.git/index
	echo "namespace cvc { const char *g_gitversion = \"$(shell cd ${srcdir} && git rev-parse HEAD && cd -)\"; }" > ${srcdir}/gitversion.cpp

# ##########


clean:
	rm -f *~ *.o *.d $(PROGRAM) ${srcdir}/gitversion.cpp

.PHONY: clean

# ##########
